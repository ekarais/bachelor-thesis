Traceback (most recent call last):
  File "train_gnn.py", line 256, in <module>
    train_loss, train_acc, train_sens, train_spec = train()
  File "train_gnn.py", line 93, in train
    logits = model(data)
  File "/home/ege/miniconda3/envs/bthesis/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/ege/Documents/bthesis/bachelor-thesis.git/gnns.py", line 79, in forward
    x, edge_index, batch = avg_pool(self.row_cluster, Data(x=x, edge_index=edge_index))
  File "/home/ege/miniconda3/envs/bthesis/lib/python3.7/site-packages/torch_geometric/nn/pool/avg_pool.py", line 60, in avg_pool
    x = None if data.x is None else _avg_pool_x(cluster, data.x)
  File "/home/ege/miniconda3/envs/bthesis/lib/python3.7/site-packages/torch_geometric/nn/pool/avg_pool.py", line 9, in _avg_pool_x
    return scatter(x, cluster, dim=0, dim_size=size, reduce='mean')
  File "/home/ege/miniconda3/envs/bthesis/lib/python3.7/site-packages/torch_scatter/scatter.py", line 154, in scatter
    return scatter_mean(src, index, dim, out, dim_size)
RuntimeError: The following operation failed in the TorchScript interpreter.
Traceback of TorchScript (most recent call last):
  File "/home/ege/miniconda3/envs/bthesis/lib/python3.7/site-packages/torch_scatter/scatter.py", line 39, in scatter_mean
                 dim_size: Optional[int] = None) -> torch.Tensor:

    out = scatter_sum(src, index, dim, out, dim_size)
          ~~~~~~~~~~~ <--- HERE
    dim_size = out.size(dim)
  File "/home/ege/miniconda3/envs/bthesis/lib/python3.7/site-packages/torch_scatter/scatter.py", line 12, in scatter_sum
                out: Optional[torch.Tensor] = None,
                dim_size: Optional[int] = None) -> torch.Tensor:
    index = broadcast(index, src, dim)
            ~~~~~~~~~ <--- HERE
    if out is None:
        size = src.size()
  File "/home/ege/miniconda3/envs/bthesis/lib/python3.7/site-packages/torch_scatter/utils.py", line 13, in broadcast
    for _ in range(src.dim(), other.dim()):
        src = src.unsqueeze(-1)
    src = src.expand_as(other)
          ~~~~~~~~~~~~~ <--- HERE
    return src
RuntimeError: The expanded size of the tensor (10240) must match the existing size (8) at non-singleton dimension 0.  Target sizes: [10240, 100].  Tensor sizes: [8, 1]

